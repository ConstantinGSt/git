git config --global user.name
git config --global user.email 
git push --set-upstream serverName branchName - связт локального репозитария и удаленного
mkdir git
ls -la
git init

* создание fale в gitbash
touch FaleName.txt

git log (-p) на первый взгляд тоже что и гит show (бля показывает всю историю зменений, 
* она может быть длинной)
q * выход из лога в гитбаш
git status

git add FaleName dirName
git commit -m "commit"
git commit -am "add + commit" 
* луччше коммитить файлы по одиночке или группами 
* что бы не писать поэмму к изменениям

git show 29482296be1d586f837f3e500350ee0f84f8a651 -  по хэшу коммита пожет подробные изменения в коммите
* по faleName так же показывает последнее изменение 
* (пока у меня только один коммит)

git restore faleName - не откатит закоммиченный файлик блять
git restore --staged faleName - откатит файлик после add но до commit

git diff - показывает изменения после последнего коммита
git diff --staged - изменения в stage если ты вдруг проеб момент до комманды add

git mv faleName /newFileName или каталог/newFileName- перенести - переименовать
* у меня данная команда не включает в себя add

git rm faleName - удалить
git restore --staged falename - отменить изменения из staged
git restore faleName - отменить изменения

git rm --cached falename - удаляет из коммита и переводит файл в состояние Untracked

* ВЕТКИ  Branches
git branch new-api - создание новой ветки (new-api) - назвение ветки
git checkout nameBranches - переход на нужную ветку
git checkout -b branchName - создание новой ветки и перемещенеи на нее
git checkout -b branchName heshSumm - создание новой ветки от нужного коммита
git branch -d branchName - удалить ветку
git merge branchName - мержить - сдвинуть указатель неад из мастера на последний коммент ветки которую мержишь в мастер
* надо ознакомится с rebase 
git checkout ХЭШЬСУММА - переход на нужный коммит ( но head потеряется) нестоит так создавать правки потом потеряются могут

git reset --hard heshSUMM  переход на указанный коммит с head и указанием имени ветки

* подключение к удаленному
* я пока по Https полезу
git remote add origin "link"
git remote -v - обзор репозиториев
git push origin master - отправляет ваш репозиторий на сервер origin в ветку мастер с ветки на которой я нахожусь
git pull - обновение репозитория ( локального с удаленного)
git fetch serverName - обновляет информацию по веткам с удаленного репозитория
* если необходимо птом переехать в последние изменения используем git merge serverName / branchNameдалее

