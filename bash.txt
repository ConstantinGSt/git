whoami - кто я =)
pwd или echo $PWD - полный путь до места нахождения
hostname - имя сервера
ip a - вывод сетевой информации
date - дата сервера (см форматы если надо) +%x / +%T
cd /home/ итд полный путь
cd ../ на каталог выше
cd ./каталог - переход на каталог ниже из текущего
cd ~ переход в домашний каталог
echo $HOME - посмотреть путь до дому =)
mkdir ./new_Catalog- create catalog
mkdir -p./first_catalog/new_Catalog -  "-p" разрешает создание промежуточного каталога
ls - обзор каталога
ls -l -- более подробная инфа
ls -a покажет скрытые файлы (префиксы можно комбинировать)
cat file.name - выводит на экран файл
less file.name - постепенный вывод файла
head file.name  - по умолчанию первые 10 строк (-колличество строк) можно больше или меньше
tail file.name - нижние 10 =) -f для мониторинга изменений (например логирование)
tail -f file.name | grep pattern - отслеживание появления паттерна
gfrep simbiolPattern faileName - поиск паттерна в файле (-10 область вокруг паттерна в 
	колличестве строк) -A 5 -B 10 снизу 5 сверху 10 строк / -i не учитывать регистр / -v скрыть символы из вывода
echo "умные и не очень мысли" > file.name - создаст или перезапишет файл
echo "умные и не очень мысли" >> file.name - добавить в конец файла
toch fali.name - создаст пустой файл
cat > post << "EOF" ввести не в одну строку а как захочется
> text
> text
> EOF - выход
cp fale.name путь назначения - копирование -r копирование каталога
mv fale.name путь назначения(до каталога) - куда надо перенести / каталог переносится аналогично (без ключа)
rm file.name - удалить файл
rm -r catalogeName - каталог соотвественно
find 'путь от которого искать' -name file/catalogName
; - разделение команд 
&& - И (вторая команда выполняется при успешном выполнении первой)
|| - или (выполняется вторая если не сработала первая)

chmod +x ./script.sh - дать права на выполнение скрипта в файле
./script.sh - запуск скрипта иеогда нужно юзать sh либо указать путь к исполняемому файлу командной оболочки:
sh ./script.sh либо
/bin/bash ./script.sh

в ~/.bashrc - у каждого юзера свои алясы
alias [сокращение]='[полная команжа]'
alias myScript='sh /путь/к/скрипту/script.sh'
source ~/.bashrc

& - черех пробел после команды = запуск ее (командны) в фоновом режиме
bg  - если процесс активен - поузим  Ctrl + Z и вводим bg
jobs -l все фоновые процессы
nohup - отвязка процесса от терминала

NANO
    Ctrl O — записать файл
    Ctrl X — выйти
    Ctrl W — найти строку
    Ctrl \ — найти и заменить

Горячие клавиши в shell
Сочетания с клавишей Ctrl

Ctrl + a - переход в начало строки (cisco, csh, zsh)

Ctrl + b - переход на 1 символ назад (cisco, csh, zsh)

Ctrl + c - посылает программе SIGINT. Обычно, прерывает текущее задание (csh, zsh)

Ctrl + d - удаляет символ под курсором (аналог delete) (cisco, csh, zsh)

Ctrl + e - переход к концу строки (cisco, csh, zsh)

Ctrl + f - переход на 1 символ вперёд (cisco, csh, zsh)

Ctrl + k - удаляет всё, до конца строки (EOL, а не на экране!) (cisco, csh, zsh)

Ctrl + l - очищает экран. Аналог команды clear. (csh, zsh)

Ctrl + r - поиск по истории. Повторение поиска (листание результатов поиска). То есть инкрементальный поиск. (zsh)

Ctrl + j - прекращает поиск и позволяет отредактировать найденную команду. Если поиск не производился, то аналогично нажатию return. (в zsh выполняет команду)

Ctrl + t - меняет символ под курсором на предыдущий. Или, если хотите, тянет предыдущий символ к концу строки. (cisco, csh, zsh)

Ctrl + u - удаляет все символы слева от курсора до начала строки. (cisco, в csh, zsh удаляет всю строку)

Ctrl + w - удаляет символы слева от курсора до начала слова. (cisco, csh, zsh)

Ctrl + xx - переходит от текущей позиции курса в начало строки и обратно. На циске работает аналогично ctrl + u. (csh)

Ctrl + x @ - показывает возможные дополнения имени хоста (имена берутся из /etc/hosts)

Ctrl + z - suspend'ит текущую задачу (csh, zsh)

Ctrl + x; Ctrl + e - открывает $EDITOR для изменения введённой строки. После сохранения изменений, команда отправляется на исполнение. Если переменная не задана, то открывается системный текстовый редактор (для линукса это, зачастую, nano)
 Сочетания с клавишей Alt

Alt + < - переход к первой команде в истории команд (zsh)

Alt + > - переход к последней команде в истории

Alt +? - показывает список возможных дополнений команды(аналогично tab-tab) (в csh, zsh аналог which string)

Alt + * - вставляет все возможные дополнений команды в строку команд

Alt + / - пытается дополнить имя файла (аналогично табуляции)

Alt +. - вставляет последний аргумент предыдущей команды (аналог !$, только не надо делать :p, чтобы проверить )

Alt + b - сдвигает курсор влево на 1 слово (cisco, csh, zsh)

Alt + c - делает букву под курсором большой, а остальные, до конца слова, маленькими. (cisco, csh, zsh)

Alt + d - удаляет символы с текущей позиции курсора и до конца слова. (cisco, csh, zsh)

Alt + f - передвигает курсор на одно слово вперёд (cisco, csh, zsh)

Alt + l - делает все буквы с текущей позиции курсора и до конца слова маленькими (cisco, csh, zsh)

Alt + t - меняет местами слова под курсором и предыдущее (zsh)

Alt + u - переводит буквы с текущей позиции курсора и до конца слова в верхний регистр (cisco, csh, zsh)

Alt + back-space - удаляет символы с текущей позиции курсора до начала слова (cisco, csh, zsh)
 
Сочетания с двойным нажатием клавиши табуляции (Tab) (обозначено как «2Т»)

Если нажать при пустой строке — выведет список всех доступных команд

(string)2T - выведет список возможных дополнений

(dir)2T - покажет подпапки папки dir

*2T - покажет подпапки исключая скрытые (имена которых начинаются с точки)

~2T - выведет всех пользователей из /etc/passwd. Дополнив имя пользователя можно перейти в его домашний каталог. Например ~oxpa/ — домашний каталог пользователя oxpa

$2T - выводит список дополнений для системных переменных

@2T - дополняет имена хостов содержащимися в /etc/hosts

=2T - листинг текущей директории, аналогичный ls.

    Ctrl A — начало строки
    Ctrl E — конец строки
    Ctrl K — удалить строку
